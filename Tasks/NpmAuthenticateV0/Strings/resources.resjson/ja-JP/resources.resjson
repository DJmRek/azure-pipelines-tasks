{
  "loc.friendlyName": "npm 認証 (タスク ランナー用)",
  "loc.helpMarkDown": "",
  "loc.description": "npm タスクも使用している場合、このタスクを使用しないでください。ビルドのスコープに関しては、リポジトリ内の .npmrc ファイルに npm 資格情報を提供します。これにより、gulp や Grunt などの npm タスク ランナーで、プライベート レジストリを使用して認証できるようになります。",
  "loc.instanceNameFormat": "npm 認証 $(workingFile)",
  "loc.input.label.workingFile": "認証するための .npmrc ファイル",
  "loc.input.help.workingFile": "Path to the .npmrc file that specifies the registries you want to work with. Select the file, not the folder e.g. \"/packages/mypackage.npmrc\". If Azure Artifacts URL and Entra Workload ID-backed Azure DevOps user' Service Connection are set, registries in npmrc will be ignored.",
  "loc.input.label.customEndpoint": "この組織/コレクション外のレジストリの資格情報",
  "loc.input.help.customEndpoint": "プロジェクトの .npmrc にある外部レジストリに使用する資格情報です。この組織/コレクションのレジストリの場合は、空白のままにします。ビルドの資格情報が自動的に使用されます。",
  "loc.input.label.workloadIdentityServiceConnection": "'Entra Workload ID-backed Azure DevOps user' Service Connection",
  "loc.input.help.workloadIdentityServiceConnection": "If this is set, feedUrl is required. Service Connections for external organizations/collection and custom endpoints are not compatible.",
  "loc.input.label.feedUrl": "Azure Artifacts URL",
  "loc.input.help.feedUrl": "If this is set, workloadIdentityServiceConnection is required. Not compatible with customEndpoint. Feed Url should be in the npm registry format, e.g. https://pkgs.dev.azure.com/{ORG_NAME}/{PROJECT}/_packaging/{FEED_NAME}/npm/registry/",
  "loc.messages.FoundBuildCredentials": "ビルドの資格情報が見つかりました",
  "loc.messages.NoBuildCredentials": "ビルドの資格情報が見つかりませんでした",
  "loc.messages.ServiceEndpointNotDefined": "サービス接続が見つかりませんでした。選択したサービス接続がまだ存在していることをご確認ください。",
  "loc.messages.NpmrcNotNpmrc": "認証するために選択したファイル (%s) が有効な .npmrc ファイルではありません。",
  "loc.messages.ServiceEndpointUrlNotDefined": "サービス接続の URL が見つかりませんでした。サービス接続が正しく構成されていることをご確認ください。",
  "loc.messages.SavingFile": "ファイル %s を保存しています",
  "loc.messages.RestoringFile": "ファイルを復元しています %s",
  "loc.messages.AddingAuthRegistry": "次のレジストリに権限を追加しています: %s",
  "loc.messages.FoundLocalRegistries": "この組織/コレクションに %d 個のレジストリが見つかりました",
  "loc.messages.AddingLocalCredentials": "ローカル レジストリの資格情報を追加しています",
  "loc.messages.AddingEndpointCredentials": "%s サービス接続の資格情報を追加しています",
  "loc.messages.AuthenticatingThisNpmrc": "%s の .npmrc ファイルに認証を追加しています",
  "loc.messages.IgnoringRegistry": "No new service connections that matched %s were found",
  "loc.messages.ForcePackagingUrl": "コレクション URL を %s に強制してパッケージ化しています",
  "loc.messages.CheckedInCredentialsOverriden": "選択された .npmrc ファイルの %s レジストリの資格情報を見つけて上書きしました。ファイルから資格情報を削除して、代わりに npm サービス接続にそれらを保存するか (推奨)、ビルドから npm の認証タスクを削除して、.npmrc に登録された資格情報を使用します。",
  "loc.messages.NoIndexJsonFile": "Index.json ファイルが見つからず、復元されたファイルもありません",
  "loc.messages.RevertedChangesToNpmrc": "%s に加えられた変更を元に戻しました。",
  "loc.messages.NpmrcDoesNotExist": "%s で選択した .npmrc ファイルが現時点では存在しません。",
  "loc.messages.SuccessfulPush": ".npmrc が正常にプッシュされました",
  "loc.messages.SuccessfulAppend": ".npmrc が正常に追加されました",
  "loc.messages.Info_AddingFederatedFeedAuth": "Adding auth information from service connection %s for feed %s",
  "loc.messages.Info_SuccessAddingFederatedFeedAuth": "Successfully added auth for feed %s.",
  "loc.messages.FailedToGetServiceConnectionAuth": "Unable to get federated credentials from service connection: %s.",
  "loc.messages.MissingFeedUrlOrServiceConnection": "Both feed url and service connection need to be set and cannot be empty.",
  "loc.messages.SkippingParsingNpmrc": "Skipping parsing npmrc",
  "loc.messages.DuplicateCredentials": "Auth for the registry '%s' was previously set. Overwriting with new configuration.",
  "loc.messages.FoundEndpointCredentials": "Found set credentials for the '%s' service connection."
}