{
  "loc.friendlyName": "npm 身份验证(适用于任务运行程序)",
  "loc.helpMarkDown": "",
  "loc.description": "如果还使用 npm 任务，请不要使用此任务。向该生成范围的存储库中的 .npmrc 文件提供 npm 凭据，使得 Gulp 和 Grunt 之类的 npm 任务运行程序能在专用注册表进行身份验证。",
  "loc.instanceNameFormat": "npm 身份验证 $(workingFile)",
  "loc.input.label.workingFile": "要进行身份验证的 .npmrc 文件",
  "loc.input.help.workingFile": "Path to the .npmrc file that specifies the registries you want to work with. Select the file, not the folder e.g. \"/packages/mypackage.npmrc\". If Azure Artifacts URL and Entra Workload ID-backed Azure DevOps user' Service Connection are set, registries in npmrc will be ignored.",
  "loc.input.label.customEndpoint": "用于此组织/集合外部的注册表的凭据",
  "loc.input.help.customEndpoint": "用于位于项目的 .npmrc 中的外部注册表的凭据。对于此组织/集合中的注册表，请将其留空；将自动使用生成的凭据。",
  "loc.input.label.workloadIdentityServiceConnection": "'Entra Workload ID-backed Azure DevOps user' Service Connection",
  "loc.input.help.workloadIdentityServiceConnection": "If this is set, feedUrl is required. Service Connections for external organizations/collection and custom endpoints are not compatible.",
  "loc.input.label.feedUrl": "Azure Artifacts URL",
  "loc.input.help.feedUrl": "If this is set, workloadIdentityServiceConnection is required. Not compatible with customEndpoint. Feed Url should be in the npm registry format, e.g. https://pkgs.dev.azure.com/{ORG_NAME}/{PROJECT}/_packaging/{FEED_NAME}/npm/registry/",
  "loc.messages.FoundBuildCredentials": "找到生成凭据",
  "loc.messages.NoBuildCredentials": "无法找到生成凭据",
  "loc.messages.ServiceEndpointNotDefined": "找不到服务连接。请确保所选的服务连接仍存在。",
  "loc.messages.NpmrcNotNpmrc": "选择进行身份验证的文件(%s)不是一个有效的 .npmrc 文件。",
  "loc.messages.ServiceEndpointUrlNotDefined": "找不到服务连接的 URL。请确保正确配置服务连接。",
  "loc.messages.SavingFile": "正在保存文件 %s",
  "loc.messages.RestoringFile": "正在还原文件 %s",
  "loc.messages.AddingAuthRegistry": "为注册表 %s 添加身份验证",
  "loc.messages.FoundLocalRegistries": "在此组织/集合中找到 %d 个注册表",
  "loc.messages.AddingLocalCredentials": "添加本地注册表的凭据",
  "loc.messages.AddingEndpointCredentials": "正在添加 %s 服务连接的凭据",
  "loc.messages.AuthenticatingThisNpmrc": "向在 %s 的 .npmrc 文件添加身份验证",
  "loc.messages.IgnoringRegistry": "No new service connections that matched %s were found",
  "loc.messages.ForcePackagingUrl": "正在打包强制执行到后列对象的集合 URL: %s",
  "loc.messages.CheckedInCredentialsOverriden": "找到并替代所选 .npmrc 文件中 %s 注册表的凭据。从文件中删除凭据并改为将其存储在 npm 服务连接中(推荐)，或从生成中删除 npm 身份验证任务以使用签入 .npmrc 的凭据。",
  "loc.messages.NoIndexJsonFile": "找不到任何 index.json 文件，未还原任何文件",
  "loc.messages.RevertedChangesToNpmrc": "已还原对 %s 所做的更改。",
  "loc.messages.NpmrcDoesNotExist": "在 %s 选择的 .npmrc 文件当前不存在。",
  "loc.messages.SuccessfulPush": "已成功推送 .npmrc",
  "loc.messages.SuccessfulAppend": "已成功追加 .npmrc",
  "loc.messages.Info_AddingFederatedFeedAuth": "Adding auth information from service connection %s for feed %s",
  "loc.messages.Info_SuccessAddingFederatedFeedAuth": "Successfully added auth for feed %s.",
  "loc.messages.FailedToGetServiceConnectionAuth": "Unable to get federated credentials from service connection: %s.",
  "loc.messages.MissingFeedUrlOrServiceConnection": "Both feed url and service connection need to be set and cannot be empty.",
  "loc.messages.SkippingParsingNpmrc": "Skipping parsing npmrc",
  "loc.messages.DuplicateCredentials": "Auth for the registry '%s' was previously set. Overwriting with new configuration.",
  "loc.messages.FoundEndpointCredentials": "Found set credentials for the '%s' service connection."
}