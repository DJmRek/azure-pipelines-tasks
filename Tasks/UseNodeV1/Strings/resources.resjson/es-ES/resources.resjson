{
  "loc.friendlyName": "Usar el ecosistema de Node.js",
  "loc.helpMarkDown": "",
  "loc.description": "Configura un entorno de Node.js y lo agrega a PATH, además de proporcionar compatibilidad con el proxy.",
  "loc.instanceNameFormat": "Usar Node $(versionSpec)",
  "loc.input.label.version": "Versión",
  "loc.input.help.version": "Especificación de la versión que se va a usar. Ejemplos: 10.x, 10.15.1 >=10.15.0",
  "loc.input.label.checkLatest": "Comprobar la última versión",
  "loc.input.help.checkLatest": "Comprueba siempre en línea la última versión disponible que cumple la especificación de versión. Este valor suele ser false a menos que tenga un escenario específico que deba obtener siempre la última versión. Esto dará lugar a costos de descarga, cuando puede que no sea necesario, especialmente con el grupo de compilación hospedado.",
  "loc.input.label.force32bit": "Usar la versión de 32 bits en agentes x64",
  "loc.input.help.force32bit": "Instala la versión x86 de Node, independientemente de la arquitectura de CPU del agente.",
  "loc.input.label.retryCountOnDownloadFails": "Set retry count when nodes downloads failed",
  "loc.input.help.retryCountOnDownloadFails": "Use this option when the task failed to download node binaries from the mirror. The task will retry to download the binaries for the specified times.",
  "loc.input.label.delayBetweenRetries": "Set delay between retries",
  "loc.input.help.delayBetweenRetries": "Use this option to set the delay between retries in milliseconds. The default value is 1000 milliseconds.",
  "loc.messages.ToolFailed": "No se pudo instalar el nodo: %s",
  "loc.messages.TryRosetta": "No se encuentra ningún node para la plataforma %s ni la arquitectura %s. Intentando instalar con Rosetta2",
  "loc.messages.NodeVersionNotFound": "No se encuentra el %s de versión del nodo para la plataforma %s y la arquitectura %s.",
  "loc.messages.UnexpectedOS": "Sistema operativo %s inesperado",
  "loc.messages.AgentTempDirNotSet": "Se esperaba que Agent.TempDirectory estuviera establecido."
}